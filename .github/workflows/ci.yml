name: CI
on:
  push:
    branches: [main]
    tags: ['v*'] # Trigger workflow for tags like v0.1.0
  pull_request:
    branches: [main]
  workflow_dispatch: {}
env:
  PACKAGE_NAME: provider-proxmox
  PACKAGE_ROOT: github.com/joekky/provider-proxmox
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  CONTROLLER_IMAGE: ghcr.io/${{ github.repository }}
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build provider binary and generate CRDs
        run: |
          make build
          echo "Generating CRDs..."
          make manifests
          echo "CRD generation completed. Contents of package/crds/:"
          ls -la package/crds/
          if [ -f package/crds/proxmox.crossplane.io_containers.yaml ]; then
            echo "Content of proxmox.crossplane.io_containers.yaml:"
            cat package/crds/proxmox.crossplane.io_containers.yaml
          else
            echo "proxmox.crossplane.io_containers.yaml not found!"
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.CONTROLLER_IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=long
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Build and push controller image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: cluster/images/provider-proxmox/Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            TARGETOS=linux
            TARGETARCH=amd64

      - name: Install Crossplane CLI
        run: |
          curl -sL https://raw.githubusercontent.com/crossplane/crossplane/master/install.sh | sh
          sudo mv crossplane /usr/local/bin/

      - name: Build provider package
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            export REGISTRY_IMAGE=${CONTROLLER_IMAGE}
            export VERSION=${VERSION}
            envsubst < package/crossplane.yaml > package/crossplane.yaml.tmp
            mv package/crossplane.yaml.tmp package/crossplane.yaml
          else
            export REGISTRY_IMAGE=${CONTROLLER_IMAGE}
            export VERSION=latest
            envsubst < package/crossplane.yaml > package/crossplane.yaml.tmp
            mv package/crossplane.yaml.tmp package/crossplane.yaml
          fi

          # Install and configure yamllint
          sudo apt-get update && sudo apt-get install -y yamllint
          cat > .yamllint <<EOF
---
extends: default
rules:
  document-start: enable
  empty-lines:
    max: 2
    max-end: 0
  line-length: disable
EOF

          echo "=== Validating YAML files ==="
          yamllint -c .yamllint package/crossplane.yaml

          echo "=== Package Structure ==="
          find . -type f -name "*.yaml" -exec echo {} \; -exec cat {} \;
          
          echo "=== Building Package ==="
          crossplane xpkg build -o provider-proxmox.xpkg --ignore ".github/**/*.yml" --package-root ./package --verbose
          
          echo "=== Verifying Package Contents ==="
          mkdir -p /tmp/xpkg-extract
          tar -xf provider-proxmox.xpkg -C /tmp/xpkg-extract
          echo "Package contents:"
          find /tmp/xpkg-extract -type f -exec echo {} \; -exec cat {} \;

      - name: Push provider package
        if: github.event_name != 'pull_request'
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            crossplane xpkg push ${{ env.IMAGE_NAME }}:${VERSION} -f provider-proxmox.xpkg
          fi
          if [[ $GITHUB_REF == refs/heads/main ]]; then
            crossplane xpkg push ${{ env.IMAGE_NAME }}:latest -f provider-proxmox.xpkg
          fi

      - name: Logout from GitHub Container Registry
        if: always()
        run: docker logout ghcr.io #test
