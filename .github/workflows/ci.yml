name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: {}

env:
  PACKAGE_NAME: provider-proxmox
  PACKAGE_ROOT: github.com/joekky/provider-proxmox
  IMAGE_NAME: ghcr.io/${{ github.repository }}/provider-proxmox

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build provider
        run: |
          make build
          mkdir -p package/bin
          cp bin/provider package/bin/

      - name: Package CRDs and metadata
        run: |
          mkdir -p package/crds
          cp -R package/crds/* package/crds/
          cat <<EOF > package/crossplane.yaml
          apiVersion: meta.pkg.crossplane.io/v1
          kind: Provider
          metadata:
            name: ${{ env.PACKAGE_NAME }}
          spec:
            controller:
              image: ${IMAGE_NAME}:${GITHUB_SHA}
          EOF

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push OCI image
        env:
          PUSH: ${{ github.event_name != 'pull_request' }}
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64 \
            --tag ${{ env.IMAGE_NAME }}:latest \
            --tag ${{ env.IMAGE_NAME }}:${{ github.sha }} \
            --file - \
            --push=${{ env.PUSH }} \
            package/ <<EOF
          FROM scratch
          COPY . /
          CMD ["/bin/provider"]
          EOF

      - name: Create artifact
        if: github.event_name != 'pull_request'
        run: |
          tar czf ${{ env.PACKAGE_NAME }}.tgz -C package .

      - name: Upload artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: ${{ env.PACKAGE_NAME }}.tgz

      - name: Logout from GitHub Container Registry
        if: always()
        run: docker logout ghcr.io
