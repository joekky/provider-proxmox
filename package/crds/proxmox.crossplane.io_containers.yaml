---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: containers.proxmox.crossplane.io
spec:
  group: proxmox.crossplane.io
  names:
    categories:
      - crossplane
      - managed
      - proxmox
    kind: Container
    listKind: ContainerList
    plural: containers
    singular: container
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Container is the schema for the containers API
          properties:
            apiVersion:
              description: |-
                apiVersion defines the versioned schema of this representation of an object.
                servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                more info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                kind is a string value representing the REST resource this object represents.
                servers may infer this from the endpoint the client submits requests to.
                cannot be updated.
                in CamelCase.
                more info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ContainerSpec defines the desired state of Container
              properties:
                deletionPolicy:
                  default: Delete
                  description: |-
                    deletionPolicy specifies what will happen to the underlying external
                    when this managed resource is deleted - either "Delete" or "Orphan" the
                    external resource.
                    this field is planned to be deprecated in favor of the managementPolicies
                    field in a future release. currently, both could be set independently and
                    non-default values would be honored if the feature flag is enabled.
                    see the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#l223
                  enum:
                    - Orphan
                    - Delete
                  type: string
                forProvider:
                  description:
                    ContainerParameters define the desired state of a Proxmox
                    container
                  properties:
                    cores:
                      type: integer
                    hostname:
                      type: string
                    memory:
                      type: integer
                    node:
                      type: string
                    osTemplate:
                      type: string
                    swap:
                      type: integer
                  required:
                    - cores
                    - hostname
                    - memory
                    - node
                    - osTemplate
                  type: object
                managementPolicies:
                  default:
                    - "*"
                  description: |-
                    this is a beta field. it is on by default but can be opted out
                    through a crossplane feature flag.
                    managementPolicies specify the array of actions Crossplane is allowed to
                    take on the managed and external resources.
                    this field is planned to replace the deletionPolicy field in a future
                    release. currently, both could be set independently and non-default
                    values would be honored if the feature flag is enabled. if both are
                    custom, the deletionPolicy field will be ignored.
                    see the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#l223
                    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                  items:
                    description: |-
                      a managementAction represents an action that the Crossplane controllers
                      can take on an external resource.
                    enum:
                      - Observe
                      - Create
                      - Update
                      - Delete
                      - LateInitialize
                      - "*"
                    type: string
                  type: array
                providerConfigRef:
                  default:
                    name: default
                  description: |-
                    providerConfigReference specifies how the provider that will be used to
                    create, observe, update, and delete this managed resource should be
                    configured.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                    policy:
                      description: Policies for referencing.
                      properties:
                        resolution:
                          default: Required
                          description: |-
                            resolution specifies whether resolution of this reference is required.
                            the default is 'Required', which means the reconcile will fail if the
                            reference cannot be resolved. 'Optional' means this reference will be
                            a no-op if it cannot be resolved.
                          enum:
                            - Required
                            - Optional
                          type: string
                        resolve:
                          description: |-
                            resolve specifies when this reference should be resolved. the default
                            is 'IfNotPresent', which will attempt to resolve the reference only when
                            the corresponding field is not present. use 'Always' to resolve the
                            reference on every reconcile.
                          enum:
                            - Always
                            - IfNotPresent
                          type: string
                      type: object
                  required:
                    - name
                  type: object
                publishConnectionDetailsTo:
                  description: |-
                    publishConnectionDetailsTo specifies the connection secret config which
                    contains a name, metadata and a reference to secret store config to
                    which any connection details for this managed resource should be written.
                    connection details frequently include the endpoint, username,
                    and password required to connect to the managed resource.
                  properties:
                    configRef:
                      default:
                        name: default
                      description: |-
                        secretStoreConfigRef specifies which secret store config should be used
                        for this connectionSecret.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                resolution specifies whether resolution of this reference is required.
                                the default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                                - Required
                                - Optional
                              type: string
                            resolve:
                              description: |-
                                resolve specifies when this reference should be resolved. the default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                                - Always
                                - IfNotPresent
                              type: string
                          type: object
                      required:
                        - name
                      type: object
                    metadata:
                      description: Metadata is the metadata for connection secret.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            annotations are the annotations to be added to connection secret.
                            - for Kubernetes secrets, this will be used as "metadata.annotations".
                            - it is up to secret store implementation for others store types.
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            labels are the labels/tags to be added to connection secret.
                            - for Kubernetes secrets, this will be used as "metadata.labels".
                            - it is up to secret store implementation for others store types.
                          type: object
                        type:
                          description: |-
                            type is the secretType for the connection secret.
                            - only valid for Kubernetes secret stores.
                          type: string
                      type: object
                    name:
                      description: Name is the name of the connection secret.
                      type: string
                  required:
                    - name
                  type: object
                writeConnectionSecretToRef:
                  description: |-
                    writeConnectionSecretToReference specifies the namespace and name of a
                    secret to which any connection details for this managed resource should
                    be written. connection details frequently include the endpoint, username,
                    and password required to connect to the managed resource.
                    this field is planned to be replaced in a future release in favor of
                    publishConnectionDetailsTo. currently, both could be set independently
                    and connection details would be published to both without affecting
                    each other.
                  properties:
                    name:
                      description: Name of the secret.
                      type: string
                    namespace:
                      description: Namespace of the secret.
                      type: string
                  required:
                    - name
                    - namespace
                  type: object
              required:
                - forProvider
              type: object
            status:
              description: ContainerStatus defines the observed state of Container
              properties:
                atProvider:
                  description:
                    ContainerObservation defines the observed state of a
                    Proxmox container
                  properties:
                    id:
                      type: string
                    status:
                      type: string
                  type: object
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          for instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description:
                          A reason for this condition's last transition from
                          one status to another.
                        type: string
                      status:
                        description:
                          Status of this condition; is it currently True,
                          False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                observedGeneration:
                  description: |-
                    observedGeneration is the latest metadata.generation
                    which resulted in either a ready state, or stalled due to error
                    it can not recover from without human intervention.
                  format: int64
                  type: integer
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}

